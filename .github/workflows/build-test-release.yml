name: CI

on:
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [main, develop]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - name: Install actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/v1.6.3/scripts/download-actionlint.bash)
      - uses: pre-commit/action@v3.0.0

  review_secrets:
    name: security-detect-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: "0"
      - name: Trufflehog Actions Scan
        uses: edplato/trufflehog-actions-scan@v0.9j-beta
        with:
          scanArguments: "--max_depth 30 -x .github/workflows/exclude-patterns.txt"

  semgrep:
    runs-on: ubuntu-latest
    name: security-sast-semgrep
    steps:
      - uses: actions/checkout@v4
      - name: Semgrep
        id: semgrep
        uses: semgrep/semgrep-action@v1
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.3.2"
      - name: Build
        run: |
          poetry install
          poetry build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: output

  publish:
    name: Build Release
    needs:
      #- pre-commit
      #- review_secrets
      - semgrep
      - build
      #- run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          persist-credentials: false
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - name: Run image
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: "1.3.2"
      - name: Build
        run: |
          poetry install
          poetry build
      - uses: actions/setup-node@v3
        with:
          node-version: "20"          
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4.0.0
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
            @semantic-release/github@8.1.0
            @semantic-release/changelog@6.0.3
            conventional-changelog-conventionalcommits@6.1.0
            @semantic-release/exec@6.0.3   
            semantic-release-replace-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.SEMREL_TOKEN }}
          PYPI_USERNAME: "__token__"
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
